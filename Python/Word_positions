def word_count_no(string):
    word_order = []
    string = string + " "
    words = 0
    y = 0
    while y < len(string)-1:
        if string[y].isalnum() and string[y+1] == " ":
            words += 1
            if words == 1:
                word_order.append(0)
                word_order.append(y)
            else:
                word_order.append(word_order[2 * words - 3] + 2)
                word_order.append(y)
        y += 1
    print(word_order)
    return words

# prints word order out as a list so that positioning of word 1 is [word_order[0] : word_order[1]
# and positioning of word n is  [word_order[2n - 2) : word_order[n + (n - 1)]
# that formula is based off a pattern I found (not immediatly obvious)


def to_list (_):
  return _.split()
  
def count_words (_):
  return len(to_list(_))
  
  
# Returns words in list to use pos, e.g to_list("wow hi") would return as ['wow', 'hi']
# Counts words in text 
