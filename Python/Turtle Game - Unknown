#Turtle Graphics Game
# cool game! :)
import turtle
import math
import random


wn = turtle.Screen()
wn.bgcolor("lightgreen")
wn.tracer(3)
#draw border
mypen = turtle.Turtle()
mypen.penup()
mypen.setposition(-300, -300)
mypen.pendown()
mypen.pensize(3)

for side in range(4):
    mypen.forward(600)
    mypen.left(90)
mypen.hideturtle()

player= turtle.Turtle()
player.color("blue")
player.shape("triangle")
player.penup()
player.speed(0)

maxgoals =6
goals =[]

#create goal

for count in range(maxgoals):
    goals.append(turtle .Turtle())
    goals[count].color("red")
    goals[count].shape("circle")
    goals[count].penup()
    goals[count].speed(0)
    goals[count].setposition(random.randint(100, 100), random.randint(100, 100))

#create goal2
'''
goal2.turtle.Turtle()
goal2.color('orange')
goal2.shape('hexagon')
goal2.penup()
goal2.speed(0)
goal2.setposition(random.randint(-300, -300),random.randint(-300, -300))
'''
speed = 1



def turnleft():
    player.left(30)

def turnright():
    player.right(30)

def increasespeed():
    global speed
    speed += 1

def isCollision(t1, t2):
    d = math.sqrt(math.pow(t1.xcor()-t2.xcor(), 2)+ math.pow(t1.ycor()-t2.ycor(), 2))
    if d < 20:
        return True
    else:
        return False


#Set keyboard Bindings
turtle.listen()
turtle.onkey(turnleft, "Left")
turtle.onkey(turnright, "Right")
turtle.onkey(increasespeed, "Up")

wn.listen()


while True:
    player.forward(speed)
    #boundary check player
    if player.xcor() > 300 or player.xcor() < -300:
        player.right(180)

    if player.ycor() > 300 or player.ycor() < -300:
        player.right(180)

    #move the goal
    for count in range(maxgoals):
        goals[count].forward(3)

        #boundary check
        if goals[count].xcor() > 290 or goals[count].xcor()<-290:
            goals[count].right(180)
        if goals[count].ycor() > 290 or goals[count].ycor()<-290:
            goals[count].right(180)
        #collision detect
        if isCollision(player, goals[count]):
            goals[count].setposition(random.randint(-300, 300), random.randint(-300, 300))
            goals[count].right(random.randint(0,360))

delay = input('press enter to exit')
